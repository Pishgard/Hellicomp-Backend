# Generated by Django 4.2.11 on 2024-03-15 16:59

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('team', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='آدرس ایمیل')),
                ('email_verified', models.BooleanField(default=False, verbose_name='معتبر بودن ایمیل')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='شماره موبایل')),
                ('phone_verified', models.BooleanField(blank=True, null=True, verbose_name='معتبر بودن شماره')),
                ('parent_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='شماره موبایل')),
                ('gender', models.CharField(choices=[('men', 'مذکر'), ('women', 'مونث')], default='men', max_length=128, verbose_name='جنسیت')),
                ('type', models.CharField(choices=[('user', 'کاربر'), ('team', 'تیم')], default='user', max_length=128, verbose_name='نوع')),
                ('active', models.BooleanField(default=False, verbose_name='فعال بودن')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='زمان ساخت')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ حذف')),
                ('created_ja_at', models.CharField(default='1402/12/25', max_length=10, verbose_name='تاریخ شمسی')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('team_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_detail_user', to='team.team', verbose_name='جزئیات تیم')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('province', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('postal_code', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('birth_date', models.DateField(blank=True, default=None, null=True)),
                ('father_name', models.CharField(blank=True, default=None, max_length=128, null=True)),
            ],
            options={
                'verbose_name': 'جزئیات کاربر',
                'verbose_name_plural': 'جزئیات کاربران',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='UserTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='زمان ساخت')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('created_ja_at', models.CharField(default='1402/12/25', max_length=10, verbose_name='تاریخ شمسی')),
                ('user_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_user_1', to=settings.AUTH_USER_MODEL, verbose_name='عضو اول')),
                ('user_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_user_2', to=settings.AUTH_USER_MODEL, verbose_name='عضو دوم')),
                ('user_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_user_team', to=settings.AUTH_USER_MODEL, verbose_name='تیم')),
            ],
            options={
                'verbose_name': 'کاربر تیم',
                'verbose_name_plural': 'کاربر تیم ها',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='OTPRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='آیدی رکوئست')),
                ('otp', models.CharField(blank=True, max_length=6, null=True, verbose_name='کد تایید')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='زمان ساخت')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ حذف')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_otp', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'کد تایید',
                'verbose_name_plural': 'کد تایید ها',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='user_details',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_detailsـuser', to='accounts.userdetails', verbose_name='جزئیات کاربر'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
